@page "/"
@inject IModalService Modal

<h1>Blazored Modal Sample</h1>

<hr class="mb-5" />

<p>
    This example shows Blazored.Modal's default behavior, including opening a modal with
    parameters and returning a result.
</p>

<button @onclick="ShowModal" class="btn btn-primary">Show Modal</button>

@code {

    public string Testing { get; set; }

    void ShowModal()
    {
        var modal = Modal.Create<SignUpForm>("Sign Up Form")
            .AddParameter(a => a.FormId, 11)
            .AddParameter(a => a.FirstName, "Jonathan")
            .AddParameter(a => a.LastName, "Sapp");

        modal.AddEventCallback(a => a.OnTesting, this, result => modal.Close(ModalResult.Cancel()));

        //modal.AddEventCallback(a => a.OnTesting,
        //        EventCallback.Factory.Create<bool>(this, result => modal.Close(ModalResult.Cancel())));

        //modal.OnClose += ModalClosed;
        modal.Show();

        //var parameters = new ModalParameters();
        //parameters.Add("FormId", 11);

        //Modal.OnClose += ModalClosed;
        //Modal.Show<SignUpForm>("Sign Up Form", parameters);
    }

    void ModalClosed(ModalResult modalResult)
    {
        Console.WriteLine("Modal has closed");

        if (modalResult.Cancelled)
        {
            Console.WriteLine("Modal was Cancelled");
        }
        else
        {
            Console.WriteLine(modalResult.Data.ToString());
        }

        //Modal.OnClose -= ModalClosed;
    }

    public class Person
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
    }

}

